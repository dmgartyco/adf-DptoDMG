{
	"name": "flujoBrandOrders",
	"properties": {
		"folder": {
			"name": "CorreosMarket"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "sa_brand_orders",
						"type": "DatasetReference"
					},
					"name": "saBRANDORDERS"
				},
				{
					"dataset": {
						"referenceName": "dbo_brand_orders",
						"type": "DatasetReference"
					},
					"name": "dboBRANDORDERS"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dbo_brand_orders",
						"type": "DatasetReference"
					},
					"name": "sinkBRANDORDERS"
				}
			],
			"transformations": [
				{
					"name": "Combinacion1"
				},
				{
					"name": "Modificarfila1"
				},
				{
					"name": "Filtrar1"
				},
				{
					"name": "Columnaderivada1"
				},
				{
					"name": "Columnaderivada2"
				}
			],
			"script": "source(output(\n\t\t{Año} as string,\n\t\tMarca as string,\n\t\t{Total del producto} as string,\n\t\t{Cantidad de productos} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> saBRANDORDERS\nsource(output(\n\t\t{Año} as string,\n\t\tMarca as string,\n\t\t{Total del producto} as decimal(15,2),\n\t\t{Cantidad de productos} as integer,\n\t\tf_aud_upload as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> dboBRANDORDERS\nColumnaderivada2, dboBRANDORDERS join(upper(saBRANDORDERS@{Año}) === upper(dboBRANDORDERS@{Año})\n\t&& upper(saBRANDORDERS@Marca) === upper(dboBRANDORDERS@Marca),\n\tjoinType:'outer',\n\tbroadcast: 'auto')~> Combinacion1\nCombinacion1 alterRow(updateIf(!equals(saBRANDORDERS@{Año},dboBRANDORDERS@{Año})&&equals(saBRANDORDERS@Marca,dboBRANDORDERS@Marca)&&(notEquals(Columnaderivada2@{Total del producto},dboBRANDORDERS@{Total del producto})||notEquals(Columnaderivada2@{Cantidad de productos},dboBRANDORDERS@{Cantidad de productos}))),\n\tupsertIf(((!isNull(saBRANDORDERS@{Año})&&!isNull(saBRANDORDERS@Marca))||!isNull(coalesce(saBRANDORDERS@{Año},saBRANDORDERS@Marca)))&&(isNull(dboBRANDORDERS@{Año})&&isNull(dboBRANDORDERS@Marca))),\n\tdeleteIf(isNull(saBRANDORDERS@{Año})&&isNull(saBRANDORDERS@Marca)&&!isNull(dboBRANDORDERS@{Año})&&!isNull(dboBRANDORDERS@Marca))) ~> Modificarfila1\nModificarfila1 filter(isUpsert() || isUpdate() || isDelete()) ~> Filtrar1\nFiltrar1 derive({Año} = saBRANDORDERS@{Año},\n\t\tMarca = saBRANDORDERS@Marca,\n\t\t{Cantidad de productos} = Columnaderivada2@{Cantidad de productos},\n\t\t{Total del producto} = Columnaderivada2@{Total del producto},\n\t\tf_aud_upload = currentTimestamp()) ~> Columnaderivada1\nsaBRANDORDERS derive({Total del producto} = toDecimal({Total del producto}, 15, 2),\n\t\t{Cantidad de productos} = toInteger({Cantidad de productos})) ~> Columnaderivada2\nColumnaderivada1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Año} as string,\n\t\tMarca as string,\n\t\t{Total del producto} as decimal(15,2),\n\t\t{Cantidad de productos} as integer,\n\t\tf_aud_upload as timestamp\n\t),\n\tdeletable:true,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:true,\n\tkeys:['Año','Marca'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\t{Año},\n\t\tMarca,\n\t\t{Total del producto},\n\t\t{Cantidad de productos},\n\t\tf_aud_upload\n\t)) ~> sinkBRANDORDERS"
		}
	}
}